{"ast":null,"code":"import _slicedToArray from \"/Users/jak/repos/karen/kshack/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";\n\nvar _jsxFileName = \"/Users/jak/repos/karen/kshack/src/components/ArtistPage.js\",\n    _s = $RefreshSig$();\n\nimport { useState } from 'react';\nimport { useRouteMatch } from 'react-router-dom';\nimport { SoundVisualizer } from './SoundVisualizer';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport function ArtistPage() {\n  _s();\n\n  var _this = this;\n\n  var _useState = useState(false),\n      _useState2 = _slicedToArray(_useState, 2),\n      ready = _useState2[0],\n      set = _useState2[1];\n\n  var _useRouteMatch = useRouteMatch(),\n      url = _useRouteMatch.url;\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"ul\", {\n      children: ARTISTS.map(function (artist, index) {\n        return /*#__PURE__*/_jsxDEV(\"li\", {\n          children: /*#__PURE__*/_jsxDEV(Link, {\n            to: \"\".concat(url, \"/\").concat(i),\n            children: find(id).name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 14,\n            columnNumber: 13\n          }, _this)\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 13,\n          columnNumber: 11\n        }, _this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 11,\n      columnNumber: 7\n    }, this), ready && /*#__PURE__*/_jsxDEV(SoundVisualizer, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"fullscreen bg \".concat(ready ? 'ready' : 'notready', \" \").concat(ready && 'clicked'),\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"stack\",\n        children: /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: function onClick() {\n            return set(true);\n          },\n          children: \"\\u25B6\\uFE0F\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 21,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 20,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n}\n\n_s(ArtistPage, \"me/zExVvfwjP5vw+GcKqlN4dFWk=\", false, function () {\n  return [useRouteMatch];\n});\n\n_c = ArtistPage;\n\nvar _c;\n\n$RefreshReg$(_c, \"ArtistPage\");","map":{"version":3,"sources":["/Users/jak/repos/karen/kshack/src/components/ArtistPage.js"],"names":["useState","useRouteMatch","SoundVisualizer","ArtistPage","ready","set","url","ARTISTS","map","artist","index","i","find","id","name"],"mappings":";;;;;AAAA,SAASA,QAAT,QAAyB,OAAzB;AACA,SAASC,aAAT,QAA8B,kBAA9B;AACA,SAASC,eAAT,QAAgC,mBAAhC;;;AAEA,OAAO,SAASC,UAAT,GAAsB;AAAA;;AAAA;;AAC3B,kBAAqBH,QAAQ,CAAC,KAAD,CAA7B;AAAA;AAAA,MAAOI,KAAP;AAAA,MAAcC,GAAd;;AACA,uBAAcJ,aAAa,EAA3B;AAAA,MAAMK,GAAN,kBAAMA,GAAN;;AAEA,sBACE;AAAA,4BACE;AAAA,gBACGC,OAAO,CAACC,GAAR,CAAY,UAACC,MAAD,EAASC,KAAT;AAAA,4BACX;AAAA,iCACE,QAAC,IAAD;AAAM,YAAA,EAAE,YAAKJ,GAAL,cAAYK,CAAZ,CAAR;AAAA,sBAA0BC,IAAI,CAACC,EAAD,CAAJ,CAASC;AAAnC;AAAA;AAAA;AAAA;AAAA;AADF,WAASJ,KAAT;AAAA;AAAA;AAAA;AAAA,iBADW;AAAA,OAAZ;AADH;AAAA;AAAA;AAAA;AAAA,YADF,EAQGN,KAAK,iBAAI,QAAC,eAAD;AAAA;AAAA;AAAA;AAAA,YARZ,eASE;AAAK,MAAA,SAAS,0BAAmBA,KAAK,GAAG,OAAH,GAAa,UAArC,cAAmDA,KAAK,IAAI,SAA5D,CAAd;AAAA,6BACE;AAAK,QAAA,SAAS,EAAC,OAAf;AAAA,+BACE;AAAQ,UAAA,OAAO,EAAE;AAAA,mBAAMC,GAAG,CAAC,IAAD,CAAT;AAAA,WAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YATF;AAAA,kBADF;AAiBD;;GArBeF,U;UAEAF,a;;;KAFAE,U","sourcesContent":["import { useState } from 'react'\nimport { useRouteMatch } from 'react-router-dom'\nimport { SoundVisualizer } from './SoundVisualizer'\n\nexport function ArtistPage() {\n  const [ready, set] = useState(false)\n  let { url } = useRouteMatch();\n\n  return (\n    <>\n      <ul>\n        {ARTISTS.map((artist, index) => (\n          <li key={index}>\n            <Link to={`${url}/${i}`}>{find(id).name}</Link>\n          </li>\n        ))}\n      </ul>\n      {ready && <SoundVisualizer />}\n      <div className={`fullscreen bg ${ready ? 'ready' : 'notready'} ${ready && 'clicked'}`}>\n        <div className=\"stack\">\n          <button onClick={() => set(true)}>▶️</button>\n        </div>\n      </div>\n    </>\n  )\n}\n"]},"metadata":{},"sourceType":"module"}