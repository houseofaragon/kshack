{"ast":null,"code":"import _slicedToArray from \"/Users/karen/repos/karen/kshack/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";\n\nvar _jsxFileName = \"/Users/karen/repos/karen/kshack/src/components/ArtistPage.js\",\n    _s = $RefreshSig$();\n\nimport { useEffect, useState } from 'react';\nimport { Link, useRouteMatch, useParams } from 'react-router-dom';\nimport { SoundVisualizer } from './SoundVisualizer';\nimport { ARTISTS } from './Artists';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport function ArtistPage() {\n  _s();\n\n  var _useState = useState(false),\n      _useState2 = _slicedToArray(_useState, 2),\n      ready = _useState2[0],\n      set = _useState2[1];\n\n  var _useParams = useParams(),\n      name = _useParams.name;\n\n  var currentArtist = ARTISTS.find(function (artist) {\n    return artist.name === name;\n  });\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"item\",\n      children: [/*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"item__album\",\n        children: currentArtist.album\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 14,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n        className: \"item__artist\",\n        children: currentArtist.niceName\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 15,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [currentArtist.album, \" was mastered by \", currentArtist.masteredBy]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 16,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"produced by \", currentArtist.producedBy]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 17,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: currentArtist.released\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 18,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: currentArtist.art\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 19,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"item__counter\",\n        children: [\"kshck\", currentArtist.id < 10 ? \"00\".concat(currentArtist.id) : currentArtist.id]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 20,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 13,\n      columnNumber: 6\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"fullscreen bg \".concat(ready ? 'ready' : 'notready', \" \").concat(ready && 'clicked'),\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"stack\",\n        children: /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: function onClick() {\n            return set(true);\n          },\n          children: \"\\u25B6\\uFE0F\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 24,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 7\n    }, this), ready && /*#__PURE__*/_jsxDEV(SoundVisualizer, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true);\n}\n\n_s(ArtistPage, \"x2VNHxdR+7fm7kwYVUhxVtdXPgQ=\", false, function () {\n  return [useParams];\n});\n\n_c = ArtistPage;\n\nvar _c;\n\n$RefreshReg$(_c, \"ArtistPage\");","map":{"version":3,"sources":["/Users/karen/repos/karen/kshack/src/components/ArtistPage.js"],"names":["useEffect","useState","Link","useRouteMatch","useParams","SoundVisualizer","ARTISTS","ArtistPage","ready","set","name","currentArtist","find","artist","album","niceName","masteredBy","producedBy","released","art","id"],"mappings":";;;;;AAAA,SAASA,SAAT,EAAoBC,QAApB,QAAoC,OAApC;AACA,SAASC,IAAT,EAAeC,aAAf,EAA8BC,SAA9B,QAA+C,kBAA/C;AACA,SAASC,eAAT,QAAgC,mBAAhC;AACA,SAASC,OAAT,QAAwB,WAAxB;;;AAEA,OAAO,SAASC,UAAT,GAAsB;AAAA;;AAC3B,kBAAqBN,QAAQ,CAAC,KAAD,CAA7B;AAAA;AAAA,MAAOO,KAAP;AAAA,MAAcC,GAAd;;AACA,mBAAeL,SAAS,EAAxB;AAAA,MAAMM,IAAN,cAAMA,IAAN;;AAEA,MAAMC,aAAa,GAAGL,OAAO,CAACM,IAAR,CAAa,UAAAC,MAAM;AAAA,WAAIA,MAAM,CAACH,IAAP,KAAgBA,IAApB;AAAA,GAAnB,CAAtB;AACA,sBACE;AAAA,4BACC;AAAK,MAAA,SAAS,EAAC,MAAf;AAAA,8BACK;AAAM,QAAA,SAAS,EAAC,aAAhB;AAAA,kBAA+BC,aAAa,CAACG;AAA7C;AAAA;AAAA;AAAA;AAAA,cADL,eAEK;AAAI,QAAA,SAAS,EAAC,cAAd;AAAA,kBAA8BH,aAAa,CAACI;AAA5C;AAAA;AAAA;AAAA;AAAA,cAFL,eAGK;AAAA,mBAAIJ,aAAa,CAACG,KAAlB,uBAA0CH,aAAa,CAACK,UAAxD;AAAA;AAAA;AAAA;AAAA;AAAA,cAHL,eAIK;AAAA,mCAAgBL,aAAa,CAACM,UAA9B;AAAA;AAAA;AAAA;AAAA;AAAA,cAJL,eAKK;AAAA,kBAAIN,aAAa,CAACO;AAAlB;AAAA;AAAA;AAAA;AAAA,cALL,eAMK;AAAA,kBAAIP,aAAa,CAACQ;AAAlB;AAAA;AAAA;AAAA;AAAA,cANL,eAOK;AAAM,QAAA,SAAS,EAAC,eAAhB;AAAA,4BAAsCR,aAAa,CAACS,EAAd,GAAmB,EAAnB,eAA6BT,aAAa,CAACS,EAA3C,IAAkDT,aAAa,CAACS,EAAtG;AAAA;AAAA;AAAA;AAAA;AAAA,cAPL;AAAA;AAAA;AAAA;AAAA;AAAA,YADD,eAUE;AAAK,MAAA,SAAS,0BAAmBZ,KAAK,GAAG,OAAH,GAAa,UAArC,cAAmDA,KAAK,IAAI,SAA5D,CAAd;AAAA,6BACE;AAAK,QAAA,SAAS,EAAC,OAAf;AAAA,+BACE;AAAQ,UAAA,OAAO,EAAE;AAAA,mBAAMC,GAAG,CAAC,IAAD,CAAT;AAAA,WAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YAVF,EAeGD,KAAK,iBAAI,QAAC,eAAD;AAAA;AAAA;AAAA;AAAA,YAfZ;AAAA,kBADF;AAmBD;;GAxBeD,U;UAECH,S;;;KAFDG,U","sourcesContent":["import { useEffect, useState } from 'react'\nimport { Link, useRouteMatch, useParams } from 'react-router-dom'\nimport { SoundVisualizer } from './SoundVisualizer'\nimport { ARTISTS } from './Artists'\n\nexport function ArtistPage() {\n  const [ready, set] = useState(false)\n  let { name } = useParams()\n  \n  const currentArtist = ARTISTS.find(artist => artist.name === name)\n  return (\n    <>\n     <div className=\"item\">\n          <span className=\"item__album\">{currentArtist.album}</span>\n          <h2 className=\"item__artist\">{currentArtist.niceName}</h2>\n          <p>{currentArtist.album} was mastered by {currentArtist.masteredBy}</p>\n          <p>produced by {currentArtist.producedBy}</p>\n          <p>{currentArtist.released}</p>\n          <p>{currentArtist.art}</p>\n          <span className=\"item__counter\">kshck{currentArtist.id < 10 ? `00${currentArtist.id}` : currentArtist.id}</span>\n        </div>\n      <div className={`fullscreen bg ${ready ? 'ready' : 'notready'} ${ready && 'clicked'}`}>\n        <div className=\"stack\">\n          <button onClick={() => set(true)}>▶️</button>\n        </div>\n      </div>\n      {ready && <SoundVisualizer />}\n    </>\n  )\n}\n"]},"metadata":{},"sourceType":"module"}