{"ast":null,"code":"import _asyncToGenerator from\"/Users/jak/repos/karen/kshack/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";import _objectSpread from\"/Users/jak/repos/karen/kshack/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";import _objectWithoutProperties from\"/Users/jak/repos/karen/kshack/node_modules/@babel/runtime/helpers/esm/objectWithoutProperties.js\";var _excluded=[\"url\",\"y\",\"space\",\"width\",\"height\",\"obj\"];import _regeneratorRuntime from\"/Users/jak/repos/karen/kshack/node_modules/@babel/runtime/regenerator/index.js\";import*as THREE from'three';import{Suspense,useEffect,useRef}from'react';import{Canvas,useFrame}from'@react-three/fiber';import{useAsset}from'use-asset';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";export function SoundVisualizer(props){return/*#__PURE__*/_jsxs(Canvas,{shadows:true,dpr:[1,2],camera:{position:[-1,1.5,2],fov:25},children:[/*#__PURE__*/_jsx(\"spotLight\",{position:[-4,4,-4],angle:0.06,penumbra:1,castShadow:true,\"shadow-mapSize\":[2048,2048]}),/*#__PURE__*/_jsxs(Suspense,{fallback:null,children:[/*#__PURE__*/_jsx(Track,{\"position-z\":0,url:\"/sleep.wav\"}),/*#__PURE__*/_jsx(Zoom,{url:\"/sleep.wav\"})]}),/*#__PURE__*/_jsxs(\"mesh\",{receiveShadow:true,rotation:[-Math.PI/2,0,0],position:[0,-0.025,0],children:[/*#__PURE__*/_jsx(\"planeGeometry\",{}),/*#__PURE__*/_jsx(\"shadowMaterial\",{transparent:true,opacity:0.15})]})]});}function Track(_ref){var url=_ref.url,_ref$y=_ref.y,y=_ref$y===void 0?2500:_ref$y,_ref$space=_ref.space,space=_ref$space===void 0?1.8:_ref$space,_ref$width=_ref.width,width=_ref$width===void 0?0.01:_ref$width,_ref$height=_ref.height,height=_ref$height===void 0?0.05:_ref$height,_ref$obj=_ref.obj,obj=_ref$obj===void 0?new THREE.Object3D():_ref$obj,props=_objectWithoutProperties(_ref,_excluded);var ref=useRef();// use-asset is the library that r3f uses internally for useLoader. It caches promises and\n// integrates them with React suspense. You can use it as-is with or without r3f.\nvar _useAsset=useAsset(function(){return createAudio(url);},url),gain=_useAsset.gain,context=_useAsset.context,update=_useAsset.update,data=_useAsset.data;useEffect(function(){// Connect the gain node, which plays the audio\ngain.connect(context.destination);// Disconnect it on unmount\nreturn function(){return gain.disconnect();};},[gain,context]);useFrame(function(state){var avg=update();// Distribute the instanced planes according to the frequency daza\nfor(var i=0;i<data.length;i++){obj.position.set(i*width*space-data.length*width*space/2,data[i]/y,0);obj.updateMatrix();ref.current.setMatrixAt(i,obj.matrix);}// Set the hue according to the frequency average\nref.current.material.color.setHSL(avg/500,0.75,0.75);ref.current.instanceMatrix.needsUpdate=true;});return/*#__PURE__*/_jsxs(\"instancedMesh\",_objectSpread(_objectSpread({castShadow:true,ref:ref,args:[null,null,data.length]},props),{},{children:[/*#__PURE__*/_jsx(\"planeGeometry\",{args:[width,height]}),/*#__PURE__*/_jsx(\"meshBasicMaterial\",{toneMapped:false})]}));}function Zoom(_ref2){var url=_ref2.url;// This will *not* re-create a new audio source, suspense is always cached,\n// so this will just access (or create and then cache) the source according to the url\nvar _useAsset2=useAsset(function(){return createAudio(url);},url),data=_useAsset2.data;return useFrame(function(state){// Set the cameras field of view according to the frequency average\nstate.camera.fov=25-data.avg/15;state.camera.updateProjectionMatrix();});}function createAudio(_x){return _createAudio.apply(this,arguments);}function _createAudio(){_createAudio=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee(url){var res,buffer,context,source,gain,analyser,data;return _regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:_context.next=2;return fetch(url);case 2:res=_context.sent;_context.next=5;return res.arrayBuffer();case 5:buffer=_context.sent;context=new(window.AudioContext||window.webkitAudioContext)();source=context.createBufferSource();_context.next=10;return new Promise(function(res){return context.decodeAudioData(buffer,res);});case 10:source.buffer=_context.sent;source.loop=true;// This is why it doesn't run in Safari 🍏🐛. Start has to be called in an onClick event\n// which makes it too awkward for a little demo since you need to load the async data first\nsource.start(0);// Create gain node and an analyser\ngain=context.createGain();analyser=context.createAnalyser();analyser.fftSize=64;source.connect(analyser);analyser.connect(gain);// The data array receive the audio frequencies\ndata=new Uint8Array(analyser.frequencyBinCount);return _context.abrupt(\"return\",{context:context,source:source,gain:gain,data:data,// This function gets called every frame per audio source\nupdate:function update(){analyser.getByteFrequencyData(data);// Calculate a frequency average\n// Calculate a frequency average\nreturn data.avg=data.reduce(function(prev,cur){return prev+cur/data.length;},0);}});case 20:case\"end\":return _context.stop();}}},_callee);}));return _createAudio.apply(this,arguments);}","map":{"version":3,"sources":["/Users/jak/repos/karen/kshack/src/components/SoundVisualizer.js"],"names":["THREE","Suspense","useEffect","useRef","Canvas","useFrame","useAsset","SoundVisualizer","props","position","fov","Math","PI","Track","url","y","space","width","height","obj","Object3D","ref","createAudio","gain","context","update","data","connect","destination","disconnect","state","avg","i","length","set","updateMatrix","current","setMatrixAt","matrix","material","color","setHSL","instanceMatrix","needsUpdate","Zoom","camera","updateProjectionMatrix","fetch","res","arrayBuffer","buffer","window","AudioContext","webkitAudioContext","source","createBufferSource","Promise","decodeAudioData","loop","start","createGain","analyser","createAnalyser","fftSize","Uint8Array","frequencyBinCount","getByteFrequencyData","reduce","prev","cur"],"mappings":"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","sourcesContent":["import * as THREE from 'three'\nimport { Suspense, useEffect, useRef } from 'react'\nimport { Canvas, useFrame } from '@react-three/fiber'\nimport { useAsset } from 'use-asset'\n\nexport function SoundVisualizer(props) {  \n  return (\n    <Canvas shadows dpr={[1, 2]} camera={{ position: [-1, 1.5, 2], fov: 25 }}>\n      <spotLight position={[-4, 4, -4]} angle={0.06} penumbra={1} castShadow shadow-mapSize={[2048, 2048]} />\n      <Suspense fallback={null}>\n        <Track position-z={0} url=\"/sleep.wav\" />\n        <Zoom url=\"/sleep.wav\" />\n      </Suspense>\n      <mesh receiveShadow rotation={[-Math.PI / 2, 0, 0]} position={[0, -0.025, 0]}>\n        <planeGeometry />\n        <shadowMaterial transparent opacity={0.15} />\n      </mesh>\n    </Canvas>\n  )\n}\n\nfunction Track({ url, y = 2500, space = 1.8, width = 0.01, height = 0.05, obj = new THREE.Object3D(), ...props }) {\n  const ref = useRef()\n  // use-asset is the library that r3f uses internally for useLoader. It caches promises and\n  // integrates them with React suspense. You can use it as-is with or without r3f.\n  const { gain, context, update, data } = useAsset(() => createAudio(url), url)\n  useEffect(() => {\n    // Connect the gain node, which plays the audio\n    gain.connect(context.destination)\n    // Disconnect it on unmount\n    return () => gain.disconnect()\n  }, [gain, context])\n\n  useFrame((state) => {\n    let avg = update()\n    // Distribute the instanced planes according to the frequency daza\n    for (let i = 0; i < data.length; i++) {\n      obj.position.set(i * width * space - (data.length * width * space) / 2, data[i] / y, 0)\n      obj.updateMatrix()\n      ref.current.setMatrixAt(i, obj.matrix)\n    }\n    // Set the hue according to the frequency average\n    ref.current.material.color.setHSL(avg / 500, 0.75, 0.75)\n    ref.current.instanceMatrix.needsUpdate = true\n  })\n  return (\n    <instancedMesh castShadow ref={ref} args={[null, null, data.length]} {...props}>\n      <planeGeometry args={[width, height]} />\n      <meshBasicMaterial toneMapped={false} />\n    </instancedMesh>\n  )\n}\n\nfunction Zoom({ url }) {\n  // This will *not* re-create a new audio source, suspense is always cached,\n  // so this will just access (or create and then cache) the source according to the url\n  const { data } = useAsset(() => createAudio(url), url)\n  return useFrame((state) => {\n    // Set the cameras field of view according to the frequency average\n    state.camera.fov = 25 - data.avg / 15\n    state.camera.updateProjectionMatrix()\n  })\n}\n\nasync function createAudio(url) {\n  // Fetch audio data and create a buffer source\n  const res = await fetch(url)\n  const buffer = await res.arrayBuffer()\n  const context = new (window.AudioContext || window.webkitAudioContext)()\n  const source = context.createBufferSource()\n  source.buffer = await new Promise((res) => context.decodeAudioData(buffer, res))\n  source.loop = true\n  // This is why it doesn't run in Safari 🍏🐛. Start has to be called in an onClick event\n  // which makes it too awkward for a little demo since you need to load the async data first\n  source.start(0)\n  // Create gain node and an analyser\n  const gain = context.createGain()\n  const analyser = context.createAnalyser()\n  analyser.fftSize = 64\n  source.connect(analyser)\n  analyser.connect(gain)\n  // The data array receive the audio frequencies\n  const data = new Uint8Array(analyser.frequencyBinCount)\n  return {\n    context,\n    source,\n    gain,\n    data,\n    // This function gets called every frame per audio source\n    update: () => {\n      analyser.getByteFrequencyData(data)\n      // Calculate a frequency average\n      return (data.avg = data.reduce((prev, cur) => prev + cur / data.length, 0))\n    },\n  }\n}\n"]},"metadata":{},"sourceType":"module"}