{"ast":null,"code":"import _classCallCheck from \"/Users/karen/repos/karen/kshack/node_modules/@babel/runtime/helpers/esm/classCallCheck.js\";\nimport _createClass from \"/Users/karen/repos/karen/kshack/node_modules/@babel/runtime/helpers/esm/createClass.js\";\nimport _assertThisInitialized from \"/Users/karen/repos/karen/kshack/node_modules/@babel/runtime/helpers/esm/assertThisInitialized.js\";\nimport _inherits from \"/Users/karen/repos/karen/kshack/node_modules/@babel/runtime/helpers/esm/inherits.js\";\nimport _createSuper from \"/Users/karen/repos/karen/kshack/node_modules/@babel/runtime/helpers/esm/createSuper.js\";\nimport { EventDispatcher } from '../core/EventDispatcher.js';\nimport { MirroredRepeatWrapping, ClampToEdgeWrapping, RepeatWrapping, LinearEncoding, UnsignedByteType, RGBAFormat, LinearMipmapLinearFilter, LinearFilter, UVMapping } from '../constants.js';\nimport * as MathUtils from '../math/MathUtils.js';\nimport { Vector2 } from '../math/Vector2.js';\nimport { Matrix3 } from '../math/Matrix3.js';\nimport { ImageUtils } from '../extras/ImageUtils.js';\nvar textureId = 0;\n\nvar Texture = /*#__PURE__*/function (_EventDispatcher) {\n  _inherits(Texture, _EventDispatcher);\n\n  var _super = _createSuper(Texture);\n\n  function Texture() {\n    var _this;\n\n    var image = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : Texture.DEFAULT_IMAGE;\n    var mapping = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : Texture.DEFAULT_MAPPING;\n    var wrapS = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : ClampToEdgeWrapping;\n    var wrapT = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : ClampToEdgeWrapping;\n    var magFilter = arguments.length > 4 && arguments[4] !== undefined ? arguments[4] : LinearFilter;\n    var minFilter = arguments.length > 5 && arguments[5] !== undefined ? arguments[5] : LinearMipmapLinearFilter;\n    var format = arguments.length > 6 && arguments[6] !== undefined ? arguments[6] : RGBAFormat;\n    var type = arguments.length > 7 && arguments[7] !== undefined ? arguments[7] : UnsignedByteType;\n    var anisotropy = arguments.length > 8 && arguments[8] !== undefined ? arguments[8] : 1;\n    var encoding = arguments.length > 9 && arguments[9] !== undefined ? arguments[9] : LinearEncoding;\n\n    _classCallCheck(this, Texture);\n\n    _this = _super.call(this);\n    Object.defineProperty(_assertThisInitialized(_this), 'id', {\n      value: textureId++\n    });\n    _this.uuid = MathUtils.generateUUID();\n    _this.name = '';\n    _this.image = image;\n    _this.mipmaps = [];\n    _this.mapping = mapping;\n    _this.wrapS = wrapS;\n    _this.wrapT = wrapT;\n    _this.magFilter = magFilter;\n    _this.minFilter = minFilter;\n    _this.anisotropy = anisotropy;\n    _this.format = format;\n    _this.internalFormat = null;\n    _this.type = type;\n    _this.offset = new Vector2(0, 0);\n    _this.repeat = new Vector2(1, 1);\n    _this.center = new Vector2(0, 0);\n    _this.rotation = 0;\n    _this.matrixAutoUpdate = true;\n    _this.matrix = new Matrix3();\n    _this.generateMipmaps = true;\n    _this.premultiplyAlpha = false;\n    _this.flipY = true;\n    _this.unpackAlignment = 4; // valid values: 1, 2, 4, 8 (see http://www.khronos.org/opengles/sdk/docs/man/xhtml/glPixelStorei.xml)\n    // Values of encoding !== THREE.LinearEncoding only supported on map, envMap and emissiveMap.\n    //\n    // Also changing the encoding after already used by a Material will not automatically make the Material\n    // update. You need to explicitly call Material.needsUpdate to trigger it to recompile.\n\n    _this.encoding = encoding;\n    _this.version = 0;\n    _this.onUpdate = null;\n    _this.isRenderTargetTexture = false;\n    return _this;\n  }\n\n  _createClass(Texture, [{\n    key: \"updateMatrix\",\n    value: function updateMatrix() {\n      this.matrix.setUvTransform(this.offset.x, this.offset.y, this.repeat.x, this.repeat.y, this.rotation, this.center.x, this.center.y);\n    }\n  }, {\n    key: \"clone\",\n    value: function clone() {\n      return new this.constructor().copy(this);\n    }\n  }, {\n    key: \"copy\",\n    value: function copy(source) {\n      this.name = source.name;\n      this.image = source.image;\n      this.mipmaps = source.mipmaps.slice(0);\n      this.mapping = source.mapping;\n      this.wrapS = source.wrapS;\n      this.wrapT = source.wrapT;\n      this.magFilter = source.magFilter;\n      this.minFilter = source.minFilter;\n      this.anisotropy = source.anisotropy;\n      this.format = source.format;\n      this.internalFormat = source.internalFormat;\n      this.type = source.type;\n      this.offset.copy(source.offset);\n      this.repeat.copy(source.repeat);\n      this.center.copy(source.center);\n      this.rotation = source.rotation;\n      this.matrixAutoUpdate = source.matrixAutoUpdate;\n      this.matrix.copy(source.matrix);\n      this.generateMipmaps = source.generateMipmaps;\n      this.premultiplyAlpha = source.premultiplyAlpha;\n      this.flipY = source.flipY;\n      this.unpackAlignment = source.unpackAlignment;\n      this.encoding = source.encoding;\n      return this;\n    }\n  }, {\n    key: \"toJSON\",\n    value: function toJSON(meta) {\n      var isRootObject = meta === undefined || typeof meta === 'string';\n\n      if (!isRootObject && meta.textures[this.uuid] !== undefined) {\n        return meta.textures[this.uuid];\n      }\n\n      var output = {\n        metadata: {\n          version: 4.5,\n          type: 'Texture',\n          generator: 'Texture.toJSON'\n        },\n        uuid: this.uuid,\n        name: this.name,\n        mapping: this.mapping,\n        repeat: [this.repeat.x, this.repeat.y],\n        offset: [this.offset.x, this.offset.y],\n        center: [this.center.x, this.center.y],\n        rotation: this.rotation,\n        wrap: [this.wrapS, this.wrapT],\n        format: this.format,\n        type: this.type,\n        encoding: this.encoding,\n        minFilter: this.minFilter,\n        magFilter: this.magFilter,\n        anisotropy: this.anisotropy,\n        flipY: this.flipY,\n        premultiplyAlpha: this.premultiplyAlpha,\n        unpackAlignment: this.unpackAlignment\n      };\n\n      if (this.image !== undefined) {\n        // TODO: Move to THREE.Image\n        var image = this.image;\n\n        if (image.uuid === undefined) {\n          image.uuid = MathUtils.generateUUID(); // UGH\n        }\n\n        if (!isRootObject && meta.images[image.uuid] === undefined) {\n          var url;\n\n          if (Array.isArray(image)) {\n            // process array of images e.g. CubeTexture\n            url = [];\n\n            for (var i = 0, l = image.length; i < l; i++) {\n              // check cube texture with data textures\n              if (image[i].isDataTexture) {\n                url.push(serializeImage(image[i].image));\n              } else {\n                url.push(serializeImage(image[i]));\n              }\n            }\n          } else {\n            // process single image\n            url = serializeImage(image);\n          }\n\n          meta.images[image.uuid] = {\n            uuid: image.uuid,\n            url: url\n          };\n        }\n\n        output.image = image.uuid;\n      }\n\n      if (!isRootObject) {\n        meta.textures[this.uuid] = output;\n      }\n\n      return output;\n    }\n  }, {\n    key: \"dispose\",\n    value: function dispose() {\n      this.dispatchEvent({\n        type: 'dispose'\n      });\n    }\n  }, {\n    key: \"transformUv\",\n    value: function transformUv(uv) {\n      if (this.mapping !== UVMapping) return uv;\n      uv.applyMatrix3(this.matrix);\n\n      if (uv.x < 0 || uv.x > 1) {\n        switch (this.wrapS) {\n          case RepeatWrapping:\n            uv.x = uv.x - Math.floor(uv.x);\n            break;\n\n          case ClampToEdgeWrapping:\n            uv.x = uv.x < 0 ? 0 : 1;\n            break;\n\n          case MirroredRepeatWrapping:\n            if (Math.abs(Math.floor(uv.x) % 2) === 1) {\n              uv.x = Math.ceil(uv.x) - uv.x;\n            } else {\n              uv.x = uv.x - Math.floor(uv.x);\n            }\n\n            break;\n        }\n      }\n\n      if (uv.y < 0 || uv.y > 1) {\n        switch (this.wrapT) {\n          case RepeatWrapping:\n            uv.y = uv.y - Math.floor(uv.y);\n            break;\n\n          case ClampToEdgeWrapping:\n            uv.y = uv.y < 0 ? 0 : 1;\n            break;\n\n          case MirroredRepeatWrapping:\n            if (Math.abs(Math.floor(uv.y) % 2) === 1) {\n              uv.y = Math.ceil(uv.y) - uv.y;\n            } else {\n              uv.y = uv.y - Math.floor(uv.y);\n            }\n\n            break;\n        }\n      }\n\n      if (this.flipY) {\n        uv.y = 1 - uv.y;\n      }\n\n      return uv;\n    }\n  }, {\n    key: \"needsUpdate\",\n    set: function set(value) {\n      if (value === true) this.version++;\n    }\n  }]);\n\n  return Texture;\n}(EventDispatcher);\n\nTexture.DEFAULT_IMAGE = undefined;\nTexture.DEFAULT_MAPPING = UVMapping;\nTexture.prototype.isTexture = true;\n\nfunction serializeImage(image) {\n  if (typeof HTMLImageElement !== 'undefined' && image instanceof HTMLImageElement || typeof HTMLCanvasElement !== 'undefined' && image instanceof HTMLCanvasElement || typeof ImageBitmap !== 'undefined' && image instanceof ImageBitmap) {\n    // default images\n    return ImageUtils.getDataURL(image);\n  } else {\n    if (image.data) {\n      // images of DataTexture\n      return {\n        data: Array.prototype.slice.call(image.data),\n        width: image.width,\n        height: image.height,\n        type: image.data.constructor.name\n      };\n    } else {\n      console.warn('THREE.Texture: Unable to serialize Texture.');\n      return {};\n    }\n  }\n}\n\nexport { Texture };","map":{"version":3,"sources":["/Users/karen/repos/karen/kshack/node_modules/three/src/textures/Texture.js"],"names":["EventDispatcher","MirroredRepeatWrapping","ClampToEdgeWrapping","RepeatWrapping","LinearEncoding","UnsignedByteType","RGBAFormat","LinearMipmapLinearFilter","LinearFilter","UVMapping","MathUtils","Vector2","Matrix3","ImageUtils","textureId","Texture","image","DEFAULT_IMAGE","mapping","DEFAULT_MAPPING","wrapS","wrapT","magFilter","minFilter","format","type","anisotropy","encoding","Object","defineProperty","value","uuid","generateUUID","name","mipmaps","internalFormat","offset","repeat","center","rotation","matrixAutoUpdate","matrix","generateMipmaps","premultiplyAlpha","flipY","unpackAlignment","version","onUpdate","isRenderTargetTexture","setUvTransform","x","y","constructor","copy","source","slice","meta","isRootObject","undefined","textures","output","metadata","generator","wrap","images","url","Array","isArray","i","l","length","isDataTexture","push","serializeImage","dispatchEvent","uv","applyMatrix3","Math","floor","abs","ceil","prototype","isTexture","HTMLImageElement","HTMLCanvasElement","ImageBitmap","getDataURL","data","call","width","height","console","warn"],"mappings":"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","sourcesContent":["import { EventDispatcher } from '../core/EventDispatcher.js';\nimport {\n\tMirroredRepeatWrapping,\n\tClampToEdgeWrapping,\n\tRepeatWrapping,\n\tLinearEncoding,\n\tUnsignedByteType,\n\tRGBAFormat,\n\tLinearMipmapLinearFilter,\n\tLinearFilter,\n\tUVMapping\n} from '../constants.js';\nimport * as MathUtils from '../math/MathUtils.js';\nimport { Vector2 } from '../math/Vector2.js';\nimport { Matrix3 } from '../math/Matrix3.js';\nimport { ImageUtils } from '../extras/ImageUtils.js';\n\nlet textureId = 0;\n\nclass Texture extends EventDispatcher {\n\n\tconstructor( image = Texture.DEFAULT_IMAGE, mapping = Texture.DEFAULT_MAPPING, wrapS = ClampToEdgeWrapping, wrapT = ClampToEdgeWrapping, magFilter = LinearFilter, minFilter = LinearMipmapLinearFilter, format = RGBAFormat, type = UnsignedByteType, anisotropy = 1, encoding = LinearEncoding ) {\n\n\t\tsuper();\n\n\t\tObject.defineProperty( this, 'id', { value: textureId ++ } );\n\n\t\tthis.uuid = MathUtils.generateUUID();\n\n\t\tthis.name = '';\n\n\t\tthis.image = image;\n\t\tthis.mipmaps = [];\n\n\t\tthis.mapping = mapping;\n\n\t\tthis.wrapS = wrapS;\n\t\tthis.wrapT = wrapT;\n\n\t\tthis.magFilter = magFilter;\n\t\tthis.minFilter = minFilter;\n\n\t\tthis.anisotropy = anisotropy;\n\n\t\tthis.format = format;\n\t\tthis.internalFormat = null;\n\t\tthis.type = type;\n\n\t\tthis.offset = new Vector2( 0, 0 );\n\t\tthis.repeat = new Vector2( 1, 1 );\n\t\tthis.center = new Vector2( 0, 0 );\n\t\tthis.rotation = 0;\n\n\t\tthis.matrixAutoUpdate = true;\n\t\tthis.matrix = new Matrix3();\n\n\t\tthis.generateMipmaps = true;\n\t\tthis.premultiplyAlpha = false;\n\t\tthis.flipY = true;\n\t\tthis.unpackAlignment = 4;\t// valid values: 1, 2, 4, 8 (see http://www.khronos.org/opengles/sdk/docs/man/xhtml/glPixelStorei.xml)\n\n\t\t// Values of encoding !== THREE.LinearEncoding only supported on map, envMap and emissiveMap.\n\t\t//\n\t\t// Also changing the encoding after already used by a Material will not automatically make the Material\n\t\t// update. You need to explicitly call Material.needsUpdate to trigger it to recompile.\n\t\tthis.encoding = encoding;\n\n\t\tthis.version = 0;\n\t\tthis.onUpdate = null;\n\n\t\tthis.isRenderTargetTexture = false;\n\n\t}\n\n\tupdateMatrix() {\n\n\t\tthis.matrix.setUvTransform( this.offset.x, this.offset.y, this.repeat.x, this.repeat.y, this.rotation, this.center.x, this.center.y );\n\n\t}\n\n\tclone() {\n\n\t\treturn new this.constructor().copy( this );\n\n\t}\n\n\tcopy( source ) {\n\n\t\tthis.name = source.name;\n\n\t\tthis.image = source.image;\n\t\tthis.mipmaps = source.mipmaps.slice( 0 );\n\n\t\tthis.mapping = source.mapping;\n\n\t\tthis.wrapS = source.wrapS;\n\t\tthis.wrapT = source.wrapT;\n\n\t\tthis.magFilter = source.magFilter;\n\t\tthis.minFilter = source.minFilter;\n\n\t\tthis.anisotropy = source.anisotropy;\n\n\t\tthis.format = source.format;\n\t\tthis.internalFormat = source.internalFormat;\n\t\tthis.type = source.type;\n\n\t\tthis.offset.copy( source.offset );\n\t\tthis.repeat.copy( source.repeat );\n\t\tthis.center.copy( source.center );\n\t\tthis.rotation = source.rotation;\n\n\t\tthis.matrixAutoUpdate = source.matrixAutoUpdate;\n\t\tthis.matrix.copy( source.matrix );\n\n\t\tthis.generateMipmaps = source.generateMipmaps;\n\t\tthis.premultiplyAlpha = source.premultiplyAlpha;\n\t\tthis.flipY = source.flipY;\n\t\tthis.unpackAlignment = source.unpackAlignment;\n\t\tthis.encoding = source.encoding;\n\n\t\treturn this;\n\n\t}\n\n\ttoJSON( meta ) {\n\n\t\tconst isRootObject = ( meta === undefined || typeof meta === 'string' );\n\n\t\tif ( ! isRootObject && meta.textures[ this.uuid ] !== undefined ) {\n\n\t\t\treturn meta.textures[ this.uuid ];\n\n\t\t}\n\n\t\tconst output = {\n\n\t\t\tmetadata: {\n\t\t\t\tversion: 4.5,\n\t\t\t\ttype: 'Texture',\n\t\t\t\tgenerator: 'Texture.toJSON'\n\t\t\t},\n\n\t\t\tuuid: this.uuid,\n\t\t\tname: this.name,\n\n\t\t\tmapping: this.mapping,\n\n\t\t\trepeat: [ this.repeat.x, this.repeat.y ],\n\t\t\toffset: [ this.offset.x, this.offset.y ],\n\t\t\tcenter: [ this.center.x, this.center.y ],\n\t\t\trotation: this.rotation,\n\n\t\t\twrap: [ this.wrapS, this.wrapT ],\n\n\t\t\tformat: this.format,\n\t\t\ttype: this.type,\n\t\t\tencoding: this.encoding,\n\n\t\t\tminFilter: this.minFilter,\n\t\t\tmagFilter: this.magFilter,\n\t\t\tanisotropy: this.anisotropy,\n\n\t\t\tflipY: this.flipY,\n\n\t\t\tpremultiplyAlpha: this.premultiplyAlpha,\n\t\t\tunpackAlignment: this.unpackAlignment\n\n\t\t};\n\n\t\tif ( this.image !== undefined ) {\n\n\t\t\t// TODO: Move to THREE.Image\n\n\t\t\tconst image = this.image;\n\n\t\t\tif ( image.uuid === undefined ) {\n\n\t\t\t\timage.uuid = MathUtils.generateUUID(); // UGH\n\n\t\t\t}\n\n\t\t\tif ( ! isRootObject && meta.images[ image.uuid ] === undefined ) {\n\n\t\t\t\tlet url;\n\n\t\t\t\tif ( Array.isArray( image ) ) {\n\n\t\t\t\t\t// process array of images e.g. CubeTexture\n\n\t\t\t\t\turl = [];\n\n\t\t\t\t\tfor ( let i = 0, l = image.length; i < l; i ++ ) {\n\n\t\t\t\t\t\t// check cube texture with data textures\n\n\t\t\t\t\t\tif ( image[ i ].isDataTexture ) {\n\n\t\t\t\t\t\t\turl.push( serializeImage( image[ i ].image ) );\n\n\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\turl.push( serializeImage( image[ i ] ) );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t} else {\n\n\t\t\t\t\t// process single image\n\n\t\t\t\t\turl = serializeImage( image );\n\n\t\t\t\t}\n\n\t\t\t\tmeta.images[ image.uuid ] = {\n\t\t\t\t\tuuid: image.uuid,\n\t\t\t\t\turl: url\n\t\t\t\t};\n\n\t\t\t}\n\n\t\t\toutput.image = image.uuid;\n\n\t\t}\n\n\t\tif ( ! isRootObject ) {\n\n\t\t\tmeta.textures[ this.uuid ] = output;\n\n\t\t}\n\n\t\treturn output;\n\n\t}\n\n\tdispose() {\n\n\t\tthis.dispatchEvent( { type: 'dispose' } );\n\n\t}\n\n\ttransformUv( uv ) {\n\n\t\tif ( this.mapping !== UVMapping ) return uv;\n\n\t\tuv.applyMatrix3( this.matrix );\n\n\t\tif ( uv.x < 0 || uv.x > 1 ) {\n\n\t\t\tswitch ( this.wrapS ) {\n\n\t\t\t\tcase RepeatWrapping:\n\n\t\t\t\t\tuv.x = uv.x - Math.floor( uv.x );\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase ClampToEdgeWrapping:\n\n\t\t\t\t\tuv.x = uv.x < 0 ? 0 : 1;\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase MirroredRepeatWrapping:\n\n\t\t\t\t\tif ( Math.abs( Math.floor( uv.x ) % 2 ) === 1 ) {\n\n\t\t\t\t\t\tuv.x = Math.ceil( uv.x ) - uv.x;\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tuv.x = uv.x - Math.floor( uv.x );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tbreak;\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( uv.y < 0 || uv.y > 1 ) {\n\n\t\t\tswitch ( this.wrapT ) {\n\n\t\t\t\tcase RepeatWrapping:\n\n\t\t\t\t\tuv.y = uv.y - Math.floor( uv.y );\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase ClampToEdgeWrapping:\n\n\t\t\t\t\tuv.y = uv.y < 0 ? 0 : 1;\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase MirroredRepeatWrapping:\n\n\t\t\t\t\tif ( Math.abs( Math.floor( uv.y ) % 2 ) === 1 ) {\n\n\t\t\t\t\t\tuv.y = Math.ceil( uv.y ) - uv.y;\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tuv.y = uv.y - Math.floor( uv.y );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tbreak;\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( this.flipY ) {\n\n\t\t\tuv.y = 1 - uv.y;\n\n\t\t}\n\n\t\treturn uv;\n\n\t}\n\n\tset needsUpdate( value ) {\n\n\t\tif ( value === true ) this.version ++;\n\n\t}\n\n}\n\nTexture.DEFAULT_IMAGE = undefined;\nTexture.DEFAULT_MAPPING = UVMapping;\n\nTexture.prototype.isTexture = true;\n\nfunction serializeImage( image ) {\n\n\tif ( ( typeof HTMLImageElement !== 'undefined' && image instanceof HTMLImageElement ) ||\n\t\t( typeof HTMLCanvasElement !== 'undefined' && image instanceof HTMLCanvasElement ) ||\n\t\t( typeof ImageBitmap !== 'undefined' && image instanceof ImageBitmap ) ) {\n\n\t\t// default images\n\n\t\treturn ImageUtils.getDataURL( image );\n\n\t} else {\n\n\t\tif ( image.data ) {\n\n\t\t\t// images of DataTexture\n\n\t\t\treturn {\n\t\t\t\tdata: Array.prototype.slice.call( image.data ),\n\t\t\t\twidth: image.width,\n\t\t\t\theight: image.height,\n\t\t\t\ttype: image.data.constructor.name\n\t\t\t};\n\n\t\t} else {\n\n\t\t\tconsole.warn( 'THREE.Texture: Unable to serialize Texture.' );\n\t\t\treturn {};\n\n\t\t}\n\n\t}\n\n}\n\nexport { Texture };\n"]},"metadata":{},"sourceType":"module"}