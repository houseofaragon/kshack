{"ast":null,"code":"import _slicedToArray from \"/Users/jak/repos/karen/kshack/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";\n\nvar _jsxFileName = \"/Users/jak/repos/karen/kshack/src/components/ArtistPage.js\",\n    _s = $RefreshSig$();\n\nimport { useState } from 'react';\nimport { Link, useRo } from 'react-router-dom';\nimport { SoundVisualizer } from './SoundVisualizer';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport var ARTISTS = [{\n  id: 0,\n  name: \"ronny-makebelieve\",\n  song: \"sleep.wav\"\n}, {\n  id: 1,\n  name: \"sleep-300\",\n  song: \"sleep.wav\"\n}];\nexport function ArtistPage() {\n  _s();\n\n  var _this = this;\n\n  var _useState = useState(false),\n      _useState2 = _slicedToArray(_useState, 2),\n      ready = _useState2[0],\n      set = _useState2[1];\n\n  var _useRouteMatch = useRouteMatch(),\n      url = _useRouteMatch.url;\n\n  var _useParams = useParams(),\n      name = _useParams.name;\n\n  console.log(url, name);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"ul\", {\n      children: ARTISTS.map(function (artist, index) {\n        return /*#__PURE__*/_jsxDEV(\"li\", {\n          children: /*#__PURE__*/_jsxDEV(Link, {\n            to: \"/artists/\".concat(artist.name),\n            children: artist.name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 21,\n            columnNumber: 13\n          }, _this)\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 20,\n          columnNumber: 11\n        }, _this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 7\n    }, this), ready && /*#__PURE__*/_jsxDEV(SoundVisualizer, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"fullscreen bg \".concat(ready ? 'ready' : 'notready', \" \").concat(ready && 'clicked'),\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"stack\",\n        children: /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: function onClick() {\n            return set(true);\n          },\n          children: \"\\u25B6\\uFE0F\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 28,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n}\n\n_s(ArtistPage, \"XkIzLnX6d+eNO/UItuidrO6zay0=\", true);\n\n_c = ArtistPage;\n\nvar _c;\n\n$RefreshReg$(_c, \"ArtistPage\");","map":{"version":3,"sources":["/Users/jak/repos/karen/kshack/src/components/ArtistPage.js"],"names":["useState","Link","useRo","SoundVisualizer","ARTISTS","id","name","song","ArtistPage","ready","set","useRouteMatch","url","useParams","console","log","map","artist","index"],"mappings":";;;;;AAAA,SAASA,QAAT,QAAyB,OAAzB;AACA,SAASC,IAAT,EAAeC,KAAf,QAA4B,kBAA5B;AACA,SAASC,eAAT,QAAgC,mBAAhC;;;AAEA,OAAO,IAAMC,OAAO,GAAG,CACrB;AAAEC,EAAAA,EAAE,EAAE,CAAN;AAASC,EAAAA,IAAI,EAAE,mBAAf;AAAoCC,EAAAA,IAAI,EAAE;AAA1C,CADqB,EAErB;AAAEF,EAAAA,EAAE,EAAE,CAAN;AAASC,EAAAA,IAAI,EAAE,WAAf;AAA4BC,EAAAA,IAAI,EAAE;AAAlC,CAFqB,CAAhB;AAKP,OAAO,SAASC,UAAT,GAAsB;AAAA;;AAAA;;AAC3B,kBAAqBR,QAAQ,CAAC,KAAD,CAA7B;AAAA;AAAA,MAAOS,KAAP;AAAA,MAAcC,GAAd;;AACA,uBAAcC,aAAa,EAA3B;AAAA,MAAMC,GAAN,kBAAMA,GAAN;;AACA,mBAAeC,SAAS,EAAxB;AAAA,MAAMP,IAAN,cAAMA,IAAN;;AAEAQ,EAAAA,OAAO,CAACC,GAAR,CAAYH,GAAZ,EAAiBN,IAAjB;AACA,sBACE;AAAA,4BACE;AAAA,gBACGF,OAAO,CAACY,GAAR,CAAY,UAACC,MAAD,EAASC,KAAT;AAAA,4BACX;AAAA,iCACE,QAAC,IAAD;AAAM,YAAA,EAAE,qBAAcD,MAAM,CAACX,IAArB,CAAR;AAAA,sBAAsCW,MAAM,CAACX;AAA7C;AAAA;AAAA;AAAA;AAAA;AADF,WAASY,KAAT;AAAA;AAAA;AAAA;AAAA,iBADW;AAAA,OAAZ;AADH;AAAA;AAAA;AAAA;AAAA,YADF,EAQGT,KAAK,iBAAI,QAAC,eAAD;AAAA;AAAA;AAAA;AAAA,YARZ,eASE;AAAK,MAAA,SAAS,0BAAmBA,KAAK,GAAG,OAAH,GAAa,UAArC,cAAmDA,KAAK,IAAI,SAA5D,CAAd;AAAA,6BACE;AAAK,QAAA,SAAS,EAAC,OAAf;AAAA,+BACE;AAAQ,UAAA,OAAO,EAAE;AAAA,mBAAMC,GAAG,CAAC,IAAD,CAAT;AAAA,WAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YATF;AAAA,kBADF;AAiBD;;GAvBeF,U;;KAAAA,U","sourcesContent":["import { useState } from 'react'\nimport { Link, useRo } from 'react-router-dom'\nimport { SoundVisualizer } from './SoundVisualizer'\n\nexport const ARTISTS = [\n  { id: 0, name: \"ronny-makebelieve\", song: \"sleep.wav\" },\n  { id: 1, name: \"sleep-300\", song: \"sleep.wav\" },\n];\n\nexport function ArtistPage() {\n  const [ready, set] = useState(false)\n  let { url } = useRouteMatch()\n  let { name } = useParams()\n\n  console.log(url, name)\n  return (\n    <>\n      <ul>\n        {ARTISTS.map((artist, index) => (\n          <li key={index}>\n            <Link to={`/artists/${artist.name}`}>{artist.name}</Link>\n          </li>\n        ))}\n      </ul>\n      {ready && <SoundVisualizer />}\n      <div className={`fullscreen bg ${ready ? 'ready' : 'notready'} ${ready && 'clicked'}`}>\n        <div className=\"stack\">\n          <button onClick={() => set(true)}>▶️</button>\n        </div>\n      </div>\n    </>\n  )\n}\n"]},"metadata":{},"sourceType":"module"}